# -*- coding: utf-8 -*-
"""
Created on Thu Nov 28 16:14:04 2019
Rede Neural HopField
@author: Tiago Buffulin
"""

import numpy as np
np.random.seed(1)
from matplotlib import pyplot as plt
import (nome do arquivo).data
from (nome do arquivo.color) import rgb2 green
from (nome do arquivo.filters) import threshold_mean
from (nome do arquivo.transform) import resize
import network

def get_corrupted_input(input, corruption_level):
    corrupted = np.copy(input)
    inv = np.random.binomial(n=1, p=corruption_level, size=len(input))
    for i, v in enumerate(input):
        if inv[i]:
            corrupted[i] = -1 * v
    return corrupted

def reshape(data):
    dim = int(np.sqrt(len(data)))
    data = np.reshape(data, (dim, dim))
    return data

def plot(data, test, predicted, figsize=(5, 6)):
    data = [reshape(d) for d in data]
    test = [reshape(d) for d in test]
    predicted = [reshape(d) for d in predicted]
    
    fig, axarr = plt.subplots(len(data)), 3, figsize=figsize)
    
